//=============================================================================
/*!	@file	gameDebug.h

	@brief	デバッグメニュー

	@author	ryunosuke ide
	@date	2013.05.20
*/
//=============================================================================

//-------------------------------インクルード-------------------------------
#include "gameDebug.h"

#if defined(DEBUG_MENU_ENABLE)

#include "game/gameMain.h"

//--------------------------------define定義--------------------------------



//--------------------------------static変数--------------------------------
namespace {

// デバッグメニュー
nk::debug::DebugMenu		debugMenu;
	
}	// unnamed


	

//--------------------------------static関数--------------------------------
namespace {

}	// unnamed

//---------------------------------関数定義---------------------------------


//===========================================================================
/*!	@brief		デバッグメニュー初期化
	@param		x, y		座標
	@param		dispLine	表示行
	@return		----
*/
//===========================================================================
void DebugMenuInit( s32 x, s32 y, s32 dispLine )
{
	debugMenu.SetPos( x, y );
	debugMenu.SetMaxDispNum( dispLine );
}


//===========================================================================
/*!	@brief		行追加
	@param		lineNo			行番号
	@param		title			タイトル
	@return		----
*/
//===========================================================================
void DebugMenuAddLine( DEBUG_MENU_LINE lineNo, const char* title )
{
	debugMenu.AddItemChunk( lineNo, title );
}


//===========================================================================
/*!	@brief		アイテムセット
	@param		lineNo			追加行
	@param		item			追加デバッグ機能
	@return		----
*/
//===========================================================================
void DebugMenuAddItem( DEBUG_MENU_LINE lineNo, nk::debug::DebugItemInterface* item )
{
	debugMenu.AddItem( lineNo, item );
	
}


//===========================================================================
/*!	@brief		指定行削除
	@param		行番号
	@return		----
*/
//===========================================================================
void DebugMenuDeleteLine( DEBUG_MENU_LINE lineNo )
{
	debugMenu.DeleteItemChunk( lineNo );
	
}

//===========================================================================
/*!	@brief		全行削除
	@param		----
	@return		----
*/
//===========================================================================
void DebugMenuDeleteLineAll( void )
{
	debugMenu.DeleteItemChunkAll();
	
}

//===========================================================================
/*!	@brief		更新
	@param		----
	@return		----
*/
//===========================================================================
void DebugMenuUpdate( void )
{
	debugMenu.Update();
	
}

//===========================================================================
/*!	@brief		描画
	@param		----
	@return		----
*/
//===========================================================================
void DebugMenuDraw( void )
{
	debugMenu.Draw();
	
}

#endif
