//=============================================================================
/*!	@file	battleEventSender.h

	@brief	UIイベントリスナー

	@author	ryunosuke ide
	@date	2013.06.24
*/
//=============================================================================

#ifndef __BATTLE_EVENT_SENDER_H__
#define __BATTLE_EVENT_SENDER_H__

#include "input/input.h"
#include "graphics/button.h"
#include "graphics/buttonEventListener.h"
#include "battleExecutor.h"


namespace game {

namespace battle {

//=============================================================================
/*!
							バトルイベントリスナー
*/
//=============================================================================
class BattleEventSender : nk::graphics::ButtonEventListener {
public:
	//-----------------------型定義--------------------------
	

	//----------------------静的メンバ-----------------------
	
	
	//-----------------------メソッド------------------------

	//===========================================================================
	/*!	@brief		バトル設定
	*/
	//===========================================================================
	void		SetBattleExecutor( BattleExecutor* battle );

	//===========================================================================
	/*!	@brief		キーボード設定
	*/
	//===========================================================================
	void		SetKeyboard( const nk::input::Keyboard* keyboard );

	//===========================================================================
	/*!	@brief		マウス設定
	*/
	//===========================================================================
	void		SetMouse( const nk::input::Mouse* mouse );


protected:
	//===========================================================================
	/*!	@brief		入場時
	*/
	//===========================================================================
	virtual void	OnCursorOver( nk::graphics::Button* eventButton ) {}

	//===========================================================================
	/*!	@brief		退場時
	*/
	//===========================================================================
	virtual void	OnCursorOut( nk::graphics::Button* eventButton ) {}

	//===========================================================================
	/*!	@brief		押された瞬間(アニメーション開始時)
	*/
	//===========================================================================
	virtual void	OnCursorDownStart( nk::graphics::Button* eventButton );

	//===========================================================================
	/*!	@brief		押された瞬間(アニメーション終了時)
	*/
	//===========================================================================
	virtual void	OnCursorDownEnd( nk::graphics::Button* eventButton ) {}

	//===========================================================================
	/*!	@brief		離された瞬間(アニメーション開始時)
	*/
	//===========================================================================
	virtual void	OnCursorUpStart( nk::graphics::Button* eventButton ) {}

	//===========================================================================
	/*!	@brief		離された瞬間(アニメーション終了時)
	*/
	//===========================================================================
	virtual void	OnCursorUpEnd( nk::graphics::Button* eventButton ) {}

	//===========================================================================
	/*!	@brief		ホールド時
	*/
	//===========================================================================
	virtual void	OnHold( nk::graphics::Button* eventButton ) {}

private:
	//-----------------------メソッド------------------------
	void	_Init( void );
	void	_Term( void );

	//----------------------メンバ変数-----------------------
	BattleExecutor*				m_battleExecutor;	//!< バトル実行
	const nk::input::Keyboard*	m_keyboard;			//!< キーボード
	const nk::input::Mouse*		m_mouse;			//!< マウス

public:
	//-------------コンストラクタ・デストラクタ--------------
			BattleEventSender();
	virtual~BattleEventSender();
};
	
}	// namespace battle
	
}	// namespace game



#endif  // __BATTLE_EVENT_SENDER_H__
