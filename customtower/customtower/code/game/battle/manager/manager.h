//=============================================================================
/*!	@file	manager.h

	@brief	マネージャー

	@author	ryunosuke ide
	@date	2013.07.05
*/
//=============================================================================


#ifndef __MANAGER_H__
#define __MANAGER_H__


namespace game {
namespace battle {


//=============================================================================
/*!
						マネージャーテンプレート
*/
//=============================================================================
template<typename T>
class Manager {
public:
	//-----------------------型定義--------------------------
	

	//----------------------静的メンバ-----------------------
	
	
	//-----------------------メソッド------------------------

	//===========================================================================
	/*!	@brief		追加
	*/
	//===========================================================================
	virtual void	Add( T* addObj ) {}

	//===========================================================================
	/*!	@brief		インスタンスの削除
	*/
	//===========================================================================
	virtual void	Delete( T* deleleObj ) {}

	//===========================================================================
	/*!	@brief		除外
	*/
	//===========================================================================
	virtual void	Remove( T* removeObj ) {}

	//===========================================================================
	/*!	@brief		全削除
	*/
	//===========================================================================
	virtual void	DeleteAll( void ) {}
	
private:
	//-----------------------メソッド------------------------
	void	_Init( void )
	{
	}
	void	_Term( void )
	{
		DeleteAll();
	}

	//----------------------メンバ変数-----------------------
	

public:
	//-------------コンストラクタ・デストラクタ--------------
			Manager() {}
	virtual~Manager() {}
};
	
}	// namespace battle
}	// namespace game






#endif  // __MANAGER_H__