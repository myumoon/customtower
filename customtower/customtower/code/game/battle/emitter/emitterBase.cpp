//=============================================================================
/*!	@file	emitterBase.h

	@brief	エミッターインターフェース

	@author	ryunosuke ide
	@date	2013.07.04
*/
//=============================================================================

//-------------------------------インクルード-------------------------------
#include "emitterBase.h"


//--------------------------------define定義--------------------------------



//--------------------------------static変数--------------------------------
namespace {

}	// unnamed

//--------------------------------static関数--------------------------------
namespace {

}	// unnamed

//---------------------------------関数定義---------------------------------


namespace game {
namespace battle {

//===========================================================================
/*!	@brief	コンストラクタ
	@param	----
*/
//===========================================================================
EmitterBase::EmitterBase()
{
	_Init();
}


//===========================================================================
/*!	@brief	デストラクタ
	@param	----
*/
//===========================================================================
EmitterBase::~EmitterBase()
{
	_Term();
}


//===========================================================================
/*!	@brief	初期化
	@param	----
	@return	----
*/
//===========================================================================
void EmitterBase::_Init( void )
{
	m_updateCount		= 0;
	m_emitInterval		= 0;
	m_life				= 0;
	m_velocity			= 0.0f;
	m_tolerance			= 0.0f;
	m_direction			= nk::math::Vector( 0.0f, 1.0f, 0.0f );
}


//===========================================================================
/*!	@brief	終了処理
	@param	----
	@return	----
*/
//===========================================================================
void EmitterBase::_Term( void )
{
	
}


//===========================================================================
/*!	@brief		位置設定
	@param		pos		発射位置
	@return		----
*/
//===========================================================================
void EmitterBase::SetPos( const nk::math::Vector& pos )
{
	m_pos	= pos;
}

//===========================================================================
/*!	@brief		発射方向設定
	@param		
	@return		----
*/
//===========================================================================
void EmitterBase::SetDirection( const nk::math::Vector& direction, f32 tolerance )
{
	m_direction	= direction;
	m_direction.Normalize();
	
	m_tolerance	= tolerance;
}

//===========================================================================
/*!	@brief		速度設定
	@param		velocity	速度
	@return		----
*/
//===========================================================================
void EmitterBase::SetVelocity( f32 velocity )
{
	m_velocity	= velocity;
}

//===========================================================================
/*!	@brief		回転量設定
	@param		deg		x,y,z回転量
	@return		----
*/
//===========================================================================
void EmitterBase::SetRotation( const nk::math::Vector& deg )
{
	m_rotation	= deg;
}

//===========================================================================
/*!	@brief		発射間隔設定
	@param		fram	間隔
	@return		----
*/
//===========================================================================
void EmitterBase::SetEmitInterval( u32 frame )
{
	m_emitInterval	= frame;
}

//===========================================================================
/*!	@brief		生存時間設定
	@param		frame	生存フレーム
	@return		----
*/
//===========================================================================
void EmitterBase::SetLife( u32 frame )
{
	m_life	= frame;
}

//===========================================================================
/*!	@brief		更新
	@param		----
	@return		----
*/
//===========================================================================
void EmitterBase::Update( void )
{
	++m_updateCount;
	if( m_emitInterval <= m_updateCount ) {
		Emit();
		m_updateCount	= 0;
	}
}
	
}	// namespace battle
}	// namespace game
