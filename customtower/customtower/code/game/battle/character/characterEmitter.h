//=============================================================================
/*!	@file	characterEmiter.h

	@brief	エミッター

	@author	ryunosuke ide
	@date	2013.07.06
*/
//=============================================================================


#ifndef __CHARACTER_EMITTER_H__
#define __CHARACTER_EMITTER_H__

#include "game/battle/emitter/emitter.h"
#include "./characterManager.h"
#include "./characterGenerator.h"


namespace game {
namespace battle {

//=============================================================================
/*!
							キャラエミッター
*/
//=============================================================================
class CharacterEmitter : public Emitter<Character> {
public:
	//-----------------------型定義--------------------------
	

	//----------------------静的メンバ-----------------------
	
	
	//-----------------------メソッド------------------------

	//===========================================================================
	/*!	@brief		マウス設定
	*/
	//===========================================================================
	void			SetMouse( const nk::input::Mouse* mouse );

	//===========================================================================
	/*!	@brief		更新
	*/
	//===========================================================================
	virtual void	Update( void );

	//===========================================================================
	/*!	@brief		発射
	*/
	//===========================================================================
	virtual void	Emit( void );
	
private:
	//-----------------------メソッド------------------------
	void	_Init( void );
	void	_Term( void );

	//----------------------メンバ変数-----------------------
	const nk::input::Mouse*			m_mouse;	//!< マウス

public:
	//-------------コンストラクタ・デストラクタ--------------
			CharacterEmitter();
	virtual~CharacterEmitter();
};
	
}	// namespace battle
}	// namespace game



#endif  // __CHARACTER_EMITTER_H__