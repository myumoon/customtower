//=============================================================================
/*!	@file	stageGenerator.h

	@brief	ステージ生成

	@author	ryunosuke ide
	@date	2013.06.02
*/
//=============================================================================


#ifndef __STAGE_GENERATOR_H__
#define __STAGE_GENERATOR_H__


#include "game/battle/generator.h"
#include "game/battle/battleInfo.h"

namespace game {
namespace battle {
class Stage;



//=============================================================================
/*!
								ステージ生成
*/
//=============================================================================
class StageGenerator : public Generator<Stage> {
public:
	//-----------------------型定義--------------------------

	//! ステージタイプ
// 	enum STAGE_TYPE {
// 		STAGE_TYPE_STAGE01,
// 	};
	

	//----------------------静的メンバ-----------------------
	
	
	//-----------------------メソッド------------------------

	//===========================================================================
	/*!	@brief		ステージ生成
	*/
	//===========================================================================
	virtual Stage*	Generate( void );

	//===========================================================================
	/*!	@brief		ステージ破棄
	*/
	//===========================================================================
	virtual void	Delete( void );
	
private:
	//-----------------------メソッド------------------------
	void	_Init( void );
	void	_Term( void );

	//----------------------メンバ変数-----------------------
	Stage*			m_stage;		//!< ステージ

public:
	//-------------コンストラクタ・デストラクタ--------------
			StageGenerator();
	virtual~StageGenerator();
};



}	// namespace battle
	
}	// namespace game




#endif  // __STAGE_GENERATOR_H__