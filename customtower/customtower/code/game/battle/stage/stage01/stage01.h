//=============================================================================
/*!	@file	stage01.h

	@brief	ステージ01

	@author	ryunosuke ide
	@date	2013.05.27
*/
//=============================================================================

#ifndef __STAGE01_H__
#define __STAGE01_H__

#include "game/battle/stage/stage.h"

namespace game {

namespace battle {

//=============================================================================
/*!
								ステージ01
*/
//=============================================================================
class Stage01 : public Stage {
public:
	//-----------------------型定義--------------------------
	

	//----------------------静的メンバ-----------------------
	
	
	//-----------------------メソッド------------------------
	
	//===========================================================================
	/*!	@brief		バトル生成時初期化
	*/
	//===========================================================================
	void				InitializeForBattle( BattleExecutor* battleExec );

	//===========================================================================
	/*!	@brief		バトル消滅時終了処理
	*/
	//===========================================================================
	void				TerminateForBattle( void );
	//===========================================================================
	/*!	@brief		描画
	*/
	//===========================================================================
	virtual void		Render( void );

protected:
	//===========================================================================
	/*!	@brief		更新
	*/
	//===========================================================================
	virtual bool		ExecuteLocal( void );
	
private:
	//-----------------------メソッド------------------------
	void	_Init( void );
	void	_Term( void );

	//----------------------メンバ変数-----------------------
	
	

public:
	//-------------コンストラクタ・デストラクタ--------------
			Stage01();
	virtual~Stage01();
};


}	// namespace battle
	
}	// namespace game






#endif  // __STAGE01_H__