//=============================================================================
/*!	@file	stage01.cpp

	@brief	ステージ01

	@author	ryunosuke ide
	@date	2013.05.27
*/
//=============================================================================

//-------------------------------インクルード-------------------------------
#include "gameDef.h"
#include "stage01.h"

#include "out/data_list.h"

//--------------------------------define定義--------------------------------



//--------------------------------static変数--------------------------------
namespace {

}	// unnamed

//--------------------------------static関数--------------------------------
namespace {

}	// unnamed

//---------------------------------関数定義---------------------------------

namespace game {
namespace battle {


//===========================================================================
/*!	@brief	コンストラクタ
	@param	----
*/
//===========================================================================
Stage01::Stage01()
{
	_Init();
}


//===========================================================================
/*!	@brief	デストラクタ
	@param	----
*/
//===========================================================================
Stage01::~Stage01()
{
	_Term();
}


//===========================================================================
/*!	@brief	初期化
	@param	----
	@return	----
*/
//===========================================================================
void Stage01::_Init( void )
{
	m_stageModel	= new nk::graphics::Model();
	m_stageModel->Init( DATA_STAGE_EARTH_STAGE_01_MODEL );
	m_stageModel->SetPriority( RENDER_PRIORITY_STAGE );
}

//===========================================================================
/*!	@brief		バトル生成時初期化
	@param		battle	バトル
	@return		----
*/
//===========================================================================
void Stage01::InitializeForBattle( BattleExecutor* battleExec )
{
	m_stageInfo.radius			= 100.0f;
	m_stageInfo.gravity			= 2.0f;
	m_stageInfo.airResistance	= 1.0f;
	
	Stage::InitializeForBattle( battleExec );

}



//===========================================================================
/*!	@brief		バトル終了時
	@param		----
	@return		----
*/
//===========================================================================
void Stage01::TerminateForBattle( void )
{


}

//===========================================================================
/*!	@brief	終了処理
	@param	----
	@return	----
*/
//===========================================================================
void Stage01::_Term( void )
{
	nk::SafeDelete( m_stageModel );
}


//===========================================================================
/*!	@brief		実行処理
	@param		----
	@return		----
*/
//===========================================================================
bool Stage01::ExecuteLocal( void )
{
	
	return true;
}


//===========================================================================
/*!	@brief		描画
	@param		----
	@return		----
*/
//===========================================================================
void Stage01::Render( void )
{
	nk::graphics::ShaderData	shaderData;
	nk::system::Light			light;
	
	light.SetPos(  nk::math::Vector( 300.0f, 300.0f, 0.0f )	);
	light.SetLook( nk::math::Vector( 0.0f, 0.0f, 0.0f )		);
	light.SetTop(  nk::math::Vector( 0.0f, 1.0f, 0.0f )		);
	
	shaderData.SetupPhongShader( light );
	
	m_stageModel->Draw( shaderData );
}



}	// namespace battle

}	// namespace game
