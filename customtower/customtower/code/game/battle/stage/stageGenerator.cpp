//=============================================================================
/*!	@file	stageGenerator.h

	@brief	ステージ生成

	@author	ryunosuke ide
	@date	2013.06.02
*/
//=============================================================================

//-------------------------------インクルード-------------------------------
#include "stageGenerator.h"

#include "general.h"
#include "stage.h"
#include "stage01/stage01.h"

//--------------------------------define定義--------------------------------



//--------------------------------static変数--------------------------------
namespace {

}	// unnamed

//--------------------------------static関数--------------------------------
namespace {

}	// unnamed

//---------------------------------関数定義---------------------------------


namespace game {

namespace battle {

//===========================================================================
/*!	@brief	コンストラクタ
	@param	----
*/
//===========================================================================
StageGenerator::StageGenerator()
{
	_Init();
}


//===========================================================================
/*!	@brief	デストラクタ
	@param	----
*/
//===========================================================================
StageGenerator::~StageGenerator()
{
	_Term();
}


//===========================================================================
/*!	@brief	初期化
	@param	----
	@return	----
*/
//===========================================================================
void StageGenerator::_Init( void )
{
	m_stage	= NULL;
}


//===========================================================================
/*!	@brief	終了処理
	@param	----
	@return	----
*/
//===========================================================================
void StageGenerator::_Term( void )
{

}


//===========================================================================
/*!	@brief		生成
	@param		info	生成情報
	@return		----
*/
//===========================================================================
Stage* StageGenerator::Generate( void )
{
	Delete();

	if( m_battleInfo.stageType == BattleInfo::STAGE_TYPE_STAGE01 ) {
		m_stage	= new Stage01();
	}
	

	return m_stage;
}



//===========================================================================
/*!	@brief		削除
	@param		----
	@return		----
*/
//===========================================================================
void StageGenerator::Delete( void )
{
	nk::SafeDelete( m_stage	);

}



}	// namespace battle

	
}	// namespace game