//=============================================================================
/*!	@file	sceneManager.h

	@brief	シーン管理

	@author	ryunosuke ide
	@date	2013.05.19
*/
//=============================================================================

#ifndef __SCENE_MANAGER_H__
#define __SCENE_MANAGER_H__

#include <vector>
#include "sceneInterface.h"

namespace game {


//=============================================================================
/*!
								
*/
//=============================================================================
class SceneManager {
public:
	//-----------------------型定義--------------------------
	enum SCENE_ID {
		SCENE_ID_NONE	= -1,		//!< 未定義シーン
		
	#if defined SCENE_TBL
		#undef 	SCENE_TBL
	#endif
	#define	SCENE_TBL( enumName, className, title )	enumName,
		#include "sceneTbl.tbl"
	#undef SCENE_TBL
		
		SCENE_ID_MAX,		//!< シーン数		
	};
	

	//----------------------静的メンバ-----------------------
	
	
	//-----------------------メソッド------------------------

	//===========================================================================
	/*!	@brief		全シーン生成
	*/
	//===========================================================================
	void			CreateScene( void );

	//===========================================================================
	/*!	@brief		全シーン削除
	*/
	//===========================================================================
	void			DeleteScene( void );

	//===========================================================================
	/*!	@brief		アクティブなシーンを設定
	*/
	//===========================================================================
	void			SetActiveScene( SCENE_ID id );

	//===========================================================================
	/*!	@brief		次のアクティブシーンを設定
	*/
	//===========================================================================
	void			SetNextActiveScene( SCENE_ID id );

	//===========================================================================
	/*!	@brief		シーン取得
	*/
	//===========================================================================
	SceneInterface*	GetScene( SCENE_ID id ) const;

	//===========================================================================
	/*!	@brief		アクティブなシーンを取得
	*/
	//===========================================================================
	SceneInterface*	GetActiveScene( void ) const;

	//===========================================================================
	/*!	@brief		更新
	*/
	//===========================================================================
	bool			Execute( void );

	//===========================================================================
	/*!	@brief		描画
	*/
	//===========================================================================
	void			Render( void );

private:
	//-----------------------メソッド------------------------
	void	_Init( void );
	void	_Term( void );

	//----------------------メンバ変数-----------------------
	std::vector<SceneInterface*>		m_scenes;		//!< シーン
	SceneInterface*						m_activeScene;	//!< アクティブ
	SCENE_ID							m_nextSceneId;	//!< 次のシーン

public:
	//-------------コンストラクタ・デストラクタ--------------
			SceneManager();
	virtual~SceneManager();
};
	
}	// namespace game







#endif  // __SCENE_MANAGER_H__