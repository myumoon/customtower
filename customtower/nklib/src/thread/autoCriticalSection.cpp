//=============================================================================
/*!	@file	autoCriticalSection.cpp

	@brief	ミューテックス

	@author	ryunosuke ide
	@date	2013.03.10
*/
//=============================================================================

//-------------------------------インクルード-------------------------------
#include "../../include/thread/autoCriticalSection.h"


//--------------------------------define定義--------------------------------



//--------------------------------static変数--------------------------------
namespace {

}	// unnamed

//--------------------------------static関数--------------------------------
namespace {

}	// unnamed

//---------------------------------関数定義---------------------------------



namespace nk {

//===========================================================================
/*!	@brief	コンストラクタ
	@param	----
*/
//===========================================================================
AutoCriticalSection::AutoCriticalSection( CriticalSection& rhs ) : m_criticalSection(&rhs)
{
	m_criticalSection->Lock();
	
}


//===========================================================================
/*!	@brief	コンストラクタ
	@param	----
*/
//===========================================================================
AutoCriticalSection::AutoCriticalSection( const CriticalSection& rhs ) 
{
	// 苦肉の策
	m_criticalSection	= const_cast<CriticalSection*>(&rhs);
	m_criticalSection->Lock();
	
}


//===========================================================================
/*!	@brief	デストラクタ
	@param	----
*/
//===========================================================================
AutoCriticalSection::~AutoCriticalSection()
{
	m_criticalSection->Unlock();
	
}




	
}	// namespace nk