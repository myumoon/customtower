//=============================================================================
/*!	@file	autoTimeReport.h

	@brief	時間測定

	@author	ryunosuke ide
	@date	2013.03.17
*/
//=============================================================================


//-------------------------------インクルード-------------------------------
#include "../../include/debug/autoTimeReport.h"

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "../../include/general.h"

//--------------------------------define定義--------------------------------



//--------------------------------static変数--------------------------------
namespace {

}	// unnamed

//--------------------------------static関数--------------------------------
namespace {

}	// unnamed

//---------------------------------関数定義---------------------------------


namespace nk {

//===========================================================================
/*!	@brief	コンストラクタ
	@param	----
*/
//===========================================================================
AutoTimeReport::AutoTimeReport()
{
	_Init();
}



//===========================================================================
/*!	@brief	コンストラクタ
	@param	label	表示ラベル(max size:256byte)
*/
//===========================================================================
AutoTimeReport::AutoTimeReport( const char* label )
{
	_Init();
	
	strncpy_s( m_label, label, sizeof(m_label) );
}


//===========================================================================
/*!	@brief	デストラクタ
	@param	----
*/
//===========================================================================
AutoTimeReport::~AutoTimeReport()
{
	_Term();
}


//===========================================================================
/*!	@brief	初期化
	@param	----
	@return	----
*/
//===========================================================================
void AutoTimeReport::_Init()
{
	m_start	= GetTimeMillSec();
	memset( m_label, 0, sizeof(m_label) );
}


//===========================================================================
/*!	@brief	終了処理
	@param	----
	@return	----
*/
//===========================================================================
void AutoTimeReport::_Term()
{
	s64		time	= GetTimeMillSec() - m_start;

	if( m_label[0] ) {
		PRINTF( "time [%s] : %ld", m_label, time );
	} else {
		PRINTF( "time : %ld", time );
	}
}


	
}	// namespace nk