//=============================================================================
/*!	@file	framerateCalclator.h

	@brief	フレームレート計測

	@author	ryunosuke ide
	@date	2013.05.27
*/
//=============================================================================

//-------------------------------インクルード-------------------------------
#include "../../include/system/framerateCalclator.h"

#include "../../include/utility/utility.h"

//--------------------------------define定義--------------------------------



//--------------------------------static変数--------------------------------
namespace {

}	// unnamed

//--------------------------------static関数--------------------------------
namespace {

}	// unnamed

//---------------------------------関数定義---------------------------------

namespace nk {

//===========================================================================
/*!	@brief	コンストラクタ
	@param	----
*/
//===========================================================================
FramerateCalclator::FramerateCalclator()
{
	_Init();
}


//===========================================================================
/*!	@brief	デストラクタ
	@param	----
*/
//===========================================================================
FramerateCalclator::~FramerateCalclator()
{
	_Term();
}


//===========================================================================
/*!	@brief	初期化
	@param	----
	@return	----
*/
//===========================================================================
void FramerateCalclator::_Init( void )
{
	Initialize();
	
}


//===========================================================================
/*!	@brief	終了処理
	@param	----
	@return	----
*/
//===========================================================================
void FramerateCalclator::_Term( void )
{

}


//===========================================================================
/*!	@brief		初期化
	@param		----
	@return		----
*/
//===========================================================================
void FramerateCalclator::Initialize( void )
{
	m_startTime		= GetTimeMillSec();
	m_updateCount	= 0;
	m_framerate		= 0.0f;
}

	
//===========================================================================
/*!	@brief		描画カウンタを更新
	@param		----
	@return		----
*/
//===========================================================================
void FramerateCalclator::UpdateDrawCount( void )
{
	++m_updateCount;
	
	u64	nowTime = GetTimeMillSec();
	
	if( 1000 <= nowTime - m_startTime ) {
	    m_framerate		= static_cast<f32>(m_updateCount * 1000) / (nowTime - m_startTime);
	    m_startTime		= nowTime;
	    m_updateCount	= 0;
	}
	
}

//===========================================================================
/*!	@brief		フレームレートを取得
	@param		----
	@return		----
*/
//===========================================================================
f32 FramerateCalclator::GetFramerate( void ) const
{
	
	return m_framerate;
}

	
}	// namespace nk
