//=============================================================================
/*!	@file	mouse.h

	@brief	マウスクラス

	@author	井手 竜之介
	@date	2012/02/16
	@todo	なし
	@bug	なし
*/
//=============================================================================

#ifndef __MOUSE_H__
#define __MOUSE_H__

//-------------------------------インクルード-------------------------------
#include "../typedef.h"
#include "./buttonConstant.h"
#include "./inputBase.h"
#include "../math/vector.h"
#include "../system/mouseEventGetterBase.h"

namespace nk {

class Window;

namespace input {

class Flick;

//=============================================================================
/*!
								マウスクラス
*/
//=============================================================================
class Mouse : public Input {
public:
	//-----------------------型定義--------------------------
	enum MOUSE_NUM {
		CLICK_LEFT,		//!< 左クリック
		CLICK_RIGHT,	//!< 右クリック
		CLICK_WHEEL,	//!< 中クリック
		
		WHEEL_UP,		//!< ホイール
		WHEEL_DOWN,		//!< ホイール
		
		MOUSE_MAX,
	};

	enum {
		CLICK_SINGLE	= 1 << (Input::USER_SHIFT + 0),	//!< シングルクリック
		CLICK_DOUBLE	= 1 << (Input::USER_SHIFT + 1),	//!< ダブルクリック
	};

	struct ClickInfo {
		u64			time;
		s32			state;

		ClickInfo() {
			this->time		= 0;
			this->state		= NONE;
		}
	};

	//! クリックとみなす押してから離すまでの間隔
	static const u32	DEFAULT_CLICK_PRESS_INTERVAL_MILLISEC	= 500;	

	//----------------------静的メンバ-----------------------
	
	
	//-----------------------メソッド------------------------

	//===========================================================================
	/*!	@brief		イベントゲッター設定
	*/
	//===========================================================================
	virtual void	SetEventGetter( const system::MouseEventGetterBase* eventGetter );
	
	//===========================================================================
	/*!	@brief		押されているかどうかの判定
	*/
	//===========================================================================
	virtual bool	IsPress( s32 button ) const;

	//===========================================================================
	/*!	@brief		前回のフレームでは離されていて今のフレームでは押されているかどうかの判定
	*/
	//===========================================================================
	virtual bool	IsPressed( s32 button ) const;

	//===========================================================================
	/*!	@brief		離しているかどうかの判定
	*/
	//===========================================================================
	virtual bool	IsRelease( s32 button ) const;

	//===========================================================================
	/*!	@brief		前のフレームで押していて今のフレームで離されたかどうかの判定
	*/
	//===========================================================================
	virtual bool	IsReleased( s32 button ) const;

	//===========================================================================
	/*!	@brief		シングルクリック
	*/
	//===========================================================================
	bool			IsClick( s32 button ) const;

	//===========================================================================
	/*!	@brief		ダブルクリック
	*/
	//===========================================================================
	bool			IsDoubleClick( s32 button ) const;

	//===========================================================================
	/*!	@brief		クリック許容時間を設定
	*/
	//===========================================================================
	void			SetClickPressInterval( u64 millisec );
	
	//===========================================================================
	/*!	@brief		座標を取得
	*/
	//===========================================================================
	math::Vector	GetPos() const;
	
	//===========================================================================
	/*!	@brief		更新
	*/
	//===========================================================================
	void			Update();

	//===========================================================================
	/*!	@brief		フリック情報取得
	*/
	//===========================================================================
	Flick*			GetFlick( void );
	const Flick*	GetFlick( void ) const;
	
private:

	//! 押下状態を習得
// 	bool			_IsPress( void* mouseAry, s32 mouseNo ) const;
	bool			_IsPress( u32 mouseNo ) const;
	
	//----------------------メンバ変数-----------------------
	const system::MouseEventGetterBase*	m_eventGetter;					//!< イベント
	
	ButtonState							m_state[MOUSE_MAX];				//!< 押下状態
	u32									m_buttonIdx[MOUSE_MAX];			//!< キー番号格納配列
	math::Vector						m_pos;							//!< 座標
	ClickInfo							m_clickInfo[MOUSE_MAX];			//!< 前回クリック時間
	u64									m_clickPressInterval;			//!< クリック押下間隔
	Flick*								m_flick;						//!< フリック

	const Window*						m_window;						//!< ウインドウ
	
	
	//-----------------------メソッド------------------------
	
public:
	//-------------コンストラクタ・デストラクタ--------------
			Mouse( const Window* window = NULL );
	virtual~Mouse();
};

}	// namespace input
}	// namespace nk







#endif  // __MOUSE_H__