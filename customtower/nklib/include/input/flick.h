//=============================================================================
/*!	@file	flick.h

	@brief	フリック入力

	@author	ryunosuke ide
	@date	2013.06.27
*/
//=============================================================================


#ifndef __FLICK_H__
#define __FLICK_H__

#include "./mouse.h"
#include "../math/vector.h"


namespace nk {

namespace input {

//=============================================================================
/*!
								フリック入力
*/
//=============================================================================
class Flick {
public:
	//-----------------------型定義--------------------------
	static const f32	DEFAULT_DECELERATION;		//!< デフォルト減衰率

	//----------------------静的メンバ-----------------------
	
	
	//-----------------------メソッド------------------------

	//===========================================================================
	/*!	@brief		初期化
	*/
	//===========================================================================
	void				Initialize( const Mouse* mouse );

	//===========================================================================
	/*!	@brief		更新
	*/
	//===========================================================================
	void				Update( void );

	//===========================================================================
	/*!	@brief		減速率設定
		@note		0.0で即停止	1.0で等速移動
	*/
	//===========================================================================
	void				SetDeceleration( f32 deceleration );

	//===========================================================================
	/*!	@brief		フリック量取得
	*/
	//===========================================================================
	math::Vector 		GetFlickVec( s32 button ) const;

	//===========================================================================
	/*!	@brief		停止時にtrueを返す
	*/
	//===========================================================================
	bool				IsStopping( s32 button ) const;
	
private:
	//-----------------------メソッド------------------------
	void	_Init( void );
	void	_Term( void );

	//----------------------メンバ変数-----------------------
	const Mouse*		m_mouse;						//!< 監視マウス
	f32					m_deceleration;					//!< 減速率
	math::Vector		m_flickVec[Mouse::MOUSE_MAX];	//!< フリック量
	math::Vector		m_prevPos[Mouse::MOUSE_MAX];	//!< 前回位置

public:
	//-------------コンストラクタ・デストラクタ--------------
			Flick();
	virtual~Flick();
};
	
}	// namespace input
	
}	// namespace nk



#endif  // __FLICK_H__