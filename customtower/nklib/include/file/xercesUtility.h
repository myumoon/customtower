//=============================================================================
/*!	@file	xercesUtility.h

	@brief	xercesc

	@author	ryunosuke ide
	@date	2013.06.09
*/
//=============================================================================


#ifndef __XERCES_UTILITY_H__
#define __XERCES_UTILITY_H__

#include <xercesc/dom/DOM.hpp>
#include <xercesc/parsers/XercesDOMParser.hpp>
#include <xercesc/dom/DOMNode.hpp>
#include <xercesc/dom/DOMNodeList.hpp>
#include <xercesc/dom/DOMElement.hpp>
#include <xercesc/dom/DOMText.hpp>
#include <xercesc/util/XMLString.hpp>

namespace nk {


//=============================================================================
/*!
								xercesc
*/
//=============================================================================
class XercesUtility {
public:
	//-----------------------型定義--------------------------
	

	//----------------------静的メンバ-----------------------
	
	
	//-----------------------メソッド------------------------

	//===========================================================================
	/*!	@brief		xercesc初期化
	*/
	//===========================================================================
	static bool		Initialize( void );

	//===========================================================================
	/*!	@brief		xercesc終了
	*/
	//===========================================================================
	static void		Terminate( void );

	//===========================================================================
	/*!	@brief		xml生成
	*/
	//===========================================================================
	static xercesc::DOMImplementation*	CreateXML( const char* features = "Core" );

	//===========================================================================
	/*!	@brief		ドキュメント生成
	*/
	//===========================================================================
	static xercesc::DOMDocument*		CreateDocument(
		xercesc::DOMImplementation*	xml,
		const char*					docName,
		const char* 				namespaceName	= NULL,
		xercesc::DOMDocumentType*	docType			= NULL
	);

	//===========================================================================
	/*!	@brief		エレメント生成
	*/
	//===========================================================================
	static xercesc::DOMElement*	CreateElement( xercesc::DOMDocument* doc, const char* elementName );

	//===========================================================================
	/*!	@brief		属性設定
	*/
	//===========================================================================
	static void		SetAttribute( xercesc::DOMElement* element, const char* attrName, const char* attrValue = "" );

	//===========================================================================
	/*!	@brief		値設定
	*/
	//===========================================================================
	static void		SetValue( xercesc::DOMNode* node, const char* value = "" );
	
	
private:
	//-----------------------メソッド------------------------
	void	_Init( void );
	void	_Term( void );

	//----------------------メンバ変数-----------------------
	

public:
	//-------------コンストラクタ・デストラクタ--------------
			XercesUtility();
	virtual~XercesUtility();
};


//=============================================================================
/*!
								XMLCh -> char
*/
//=============================================================================
class XMLChToChar {
public:
	//-----------------------型定義--------------------------
	

	//----------------------静的メンバ-----------------------
	
	
	//-----------------------メソッド------------------------

	//===========================================================================
	/*!	@brief		変換データ取得
	*/
	//===========================================================================
	char*	GetChar( void );

	//===========================================================================
	/*!	@brief		変換
	*/
	//===========================================================================
	void	Convert( XMLCh* xmlch );
	
private:
	//-----------------------メソッド------------------------
	void	_Init( void );
	void	_Term( void );

	// リリース
	void	_Release( void );

	//----------------------メンバ変数-----------------------
	char*	m_data;

public:
	//-------------コンストラクタ・デストラクタ--------------
			XMLChToChar( XMLCh* xmlch );
			XMLChToChar();
	virtual~XMLChToChar();
};







//=============================================================================
/*!
								char -> XMLCh
*/
//=============================================================================
class CharToXMLCh {
public:
	//-----------------------型定義--------------------------
	

	//----------------------静的メンバ-----------------------
	
	
	//-----------------------メソッド------------------------

	//===========================================================================
	/*!	@brief		変換データ取得
	*/
	//===========================================================================
	XMLCh*		GetXMLCh( void );

	//===========================================================================
	/*!	@brief		変換
	*/
	//===========================================================================
	void		Convert( const char* str );
	
private:
	//-----------------------メソッド------------------------
	void		_Init( void );
	void		_Term( void );

	// リリース
	void		_Release( void );

	//----------------------メンバ変数-----------------------
	XMLCh*		m_data;

public:
	//-------------コンストラクタ・デストラクタ--------------
			CharToXMLCh( const char* str );
			CharToXMLCh();
	virtual~CharToXMLCh();
};

}	// namespace nk





#endif  // __XERCES_UTILITY_H__