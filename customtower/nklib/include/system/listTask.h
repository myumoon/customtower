//=============================================================================
/*!	@file	listTask

	@brief	リストタスク

	@author	ryunosuke ide
	@date	2013.03.17
*/
//=============================================================================


#ifndef __LISTTASK_H__
#define __LISTTASK_H__

#include "./task.h"


namespace nk {
namespace system {
	
//=============================================================================
/*!
								リストタスク
*/
//=============================================================================
class ListTask : public Task {
public:
	//-----------------------型定義--------------------------
	

	//----------------------静的メンバ-----------------------
	
	
	//-----------------------メソッド------------------------

	//===========================================================================
	/*!	@brief		更新
	*/
	//===========================================================================
	virtual void		Execute( void* parentParam )	{}

	//===========================================================================
	/*!	@brief		子供の更新
	*/
	//===========================================================================
	virtual void		UpdateChild( void* parentParam );

	//===========================================================================
	/*!	@brief		子供を追加
	*/
	//===========================================================================
	virtual void		ConnectChild( Task* task );

	//===========================================================================
	/*!	@brief		子供を捨てる
	*/
	//===========================================================================
	virtual void		DisconnectChild( Task* task );
	virtual void		DisconnectAllChild( void );

	
private:
	//----------------------メンバ変数-----------------------
	Task*				m_child;		//!< 子供
		
	//-----------------------メソッド------------------------
	void	_Init();
	void	_Term();

public:
	//-------------コンストラクタ・デストラクタ--------------
			ListTask();
	virtual~ListTask();
};


}	// namespace system
}	// namespace nk




#endif  // __LISTTASK_H__