//=============================================================================
/*!	@file	systemEventGetter.h

	@brief	システムイベント取得

	@author	ryunosuke ide
	@date	2013.06.30
*/
//=============================================================================


#ifndef __SYSTEM_EVENT_GETTER_H__
#define __SYSTEM_EVENT_GETTER_H__

#include "systemEventGetterBase.h"
#include "systemEvent.h"

namespace nk {
namespace system {

//=============================================================================
/*!
							システムイベント取得
*/
//=============================================================================
class SystemEventGetter : public SystemEventGetterBase {
public:
	//-----------------------型定義--------------------------
	

	//----------------------静的メンバ-----------------------
	
	
	//-----------------------メソッド------------------------

	//===========================================================================
	/*!	@brief		イベントチェック
	*/
	//===========================================================================
	virtual bool	IsOn( u32 eventType ) const;

	//===========================================================================
	/*!	@brief		更新
	*/
	//===========================================================================
	virtual void	Update( void );
	
private:
	//-----------------------メソッド------------------------
	void	_Init( void );
	void	_Term( void );

	//----------------------メンバ変数-----------------------
	SystemEvent				m_event;				//!< イベント格納
public:
	//-------------コンストラクタ・デストラクタ--------------
			SystemEventGetter();
	virtual~SystemEventGetter();
};
	
}	// namespace system
}	// namespace nk


#endif  // __SYSTEM_EVENT_GETTER_H__