//=============================================================================
/*!	@file	framerateCalclator.h

	@brief	フレームレート計測

	@author	ryunosuke ide
	@date	2013.05.27
*/
//=============================================================================


#ifndef __FRAMERATE_CALCULATOR_H__
#define __FRAMERATE_CALCULATOR_H__


namespace nk {

//=============================================================================
/*!
								フレームレート計算
*/
//=============================================================================
class FramerateCalclator {
public:
	//-----------------------型定義--------------------------
	

	//----------------------静的メンバ-----------------------
	
	
	//-----------------------メソッド------------------------

	//===========================================================================
	/*!	@brief		初期化
	*/
	//===========================================================================
	void	Initialize( void );

	//===========================================================================
	/*!	@brief		描画カウンタを更新
	*/
	//===========================================================================
	void	UpdateDrawCount( void );

	//===========================================================================
	/*!	@brief		フレームレート取得
	*/
	//===========================================================================
	f32		GetFramerate( void ) const;
	
private:
	//-----------------------メソッド------------------------
	void	_Init( void );
	void	_Term( void );

	//----------------------メンバ変数-----------------------
	u64		m_startTime;		//!< 開始時間
	s32		m_updateCount;		//!< 更新カウンタ
	f32		m_framerate;		//!< フレームレート	

public:
	//-------------コンストラクタ・デストラクタ--------------
			FramerateCalclator();
	virtual~FramerateCalclator();
};
	
}	// namespace nk






#endif  // __FRAMERATE_CALCULATOR_H__