//=============================================================================
/*!	@file	layoutPartsBox.h

	@brief	レイアウトパーツ入れ

	@author	ryunosuke ide
	@date	2013.06.09
*/
//=============================================================================

#ifndef __LAYOUT_PARTS_BOX_H__
#define __LAYOUT_PARTS_BOX_H__

#include <vector>
#include "layoutParts.h"


namespace nk {
namespace graphics {


//=============================================================================
/*!
								レイアウトパーツ
*/
//=============================================================================
class LayoutPartsBox : public LayoutParts {
public:
	//-----------------------型定義--------------------------
	typedef std::vector<LayoutParts*>		VecParts;
	typedef std::vector<LayoutPartsBox*>	VecPartsBox;

	//----------------------静的メンバ-----------------------
	
	
	//-----------------------メソッド------------------------

	//===========================================================================
	/*!	@brief		子供を追加
	*/
	//===========================================================================
	void			AddParts( LayoutParts* parts );
	void			AddPartsBox( LayoutPartsBox* partsbox );

	//===========================================================================
	/*!	@brief		子供を削除
	*/
	//===========================================================================
	void			DeleteParts( LayoutParts* child );
	void			DeleteParts( void );

	//===========================================================================
	/*!	@brief		更新
	*/
	//===========================================================================
	virtual void	UpdateParts( void );

	//===========================================================================
	/*!	@brief		描画
	*/
	//===========================================================================
	virtual void	DrawParts( void );

	//===========================================================================
	/*!	@brief		子供を検索
	*/
	//===========================================================================
	LayoutParts*	FindParts( const char* partsname, bool recursive = false );

	//===========================================================================
	/*!	@brief		ボックスを検索
	*/
	//===========================================================================
	LayoutPartsBox*	FindPartsBox( const char* partsboxname, bool recursive = false );

	//===========================================================================
	/*!	@brief		位置設定
		@note		子供にも反映させる
	*/
	//===========================================================================
	virtual void	SetPos( const math::Vector& pos );
	virtual void	SetPos( s32 x, s32 y );
	

	//===========================================================================
	/*!	@brief		マウス座標を含んでいるパーツを取得(子供優先)
	*/
	//===========================================================================
	bool			GetIncludedPartsOf( LayoutParts** findParts, s32* findPartsDepth, const math::Vector& mousePos, s32 depth );
	
protected:

	//===========================================================================
	/*!	@brief		子供と位置設定
	*/
	//===========================================================================
	void			_SetPosWithChildren( s32 x, s32 y );
	
	
private:
	//-----------------------メソッド------------------------
	void	_Init( void );
	void	_Term( void );

	//----------------------メンバ変数-----------------------
	VecPartsBox		m_partsBoxTree;		//!< ボックスツリー
	VecParts		m_partsTree;		//!< パーツ

public:
	//-------------コンストラクタ・デストラクタ--------------
			LayoutPartsBox();
	virtual~LayoutPartsBox();
};
	
}	// namespace graphics	
}	// namespace nk



#endif  // __LAYOUT_PARTS_BOX_H__
